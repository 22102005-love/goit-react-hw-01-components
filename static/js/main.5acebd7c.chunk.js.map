{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","alt","item","label","quantity","followers","views","likes","Statistics","title","statistics","list","map","stat","percentage","id","FriendListItem","isOnline","friendItemWrapper","style","backgroundColor","width","propType","PropTypes","string","isRequired","bool","FriendList","friends","friendList","friend","array","TransactionHistory","items","transactionHistory","headString","column","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5acebd7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__34NNk\",\"description\":\"Profile_description__22xfi\",\"avatar\":\"Profile_avatar__1Wv-a\",\"stats\":\"Profile_stats__3pGU_\",\"item\":\"Profile_item__3wEAk\",\"name\":\"Profile_name__tOHuZ\",\"tag\":\"Profile_tag__1LUHM\",\"location\":\"Profile_location__3ZE42\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2aZNG\",\"headString\":\"TransactionHistory_headString__1HFFv\",\"column\":\"TransactionHistory_column__3mqxM\",\"string\":\"TransactionHistory_string__1RtNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2ZU6H\",\"list\":\"Statistics_list__21pYj\",\"title\":\"Statistics_title__xueER\",\"item\":\"Statistics_item__1eBSD\",\"percentage\":\"Statistics_percentage__31SUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendItemWrapper\":\"FriendListItem_friendItemWrapper__2VEWG\",\"stat\":\"FriendListItem_stat__3ncPn\",\"avatar\":\"FriendListItem_avatar__3NoTO\",\"name\":\"FriendListItem_name__22E6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3xgbK\",\"FriendListItem\":\"FriendList_FriendListItem__2wniB\"};","import PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <div className={s.description}>\r\n                <img\r\n                    src={avatar}\r\n                    alt={name}\r\n                    className={s.avatar}\r\n                />\r\n                <p className={s.name}>{name}</p>\r\n                <p className={s.tag}>@{tag}</p>\r\n                <p className={s.location}>{location}</p>\r\n            </div>\r\n\r\n            <ul className={s.stats}>\r\n                <li className={s.item}>\r\n                    <span className={s.label}>Followers</span>\r\n                    <span className={s.quantity}>{stats.followers}</span>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <span className={s.label}>Views</span>\r\n                    <span className={s.quantity}>{stats.views}</span>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <span className={s.label}>Likes</span>\r\n                    <span className={s.quantity}>{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.object.isRequired,\r\n};\r\nexport default Profile;","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n    return <section className={s.statistics}>\r\n      {title && (<h2 className={s.title}>{title}</h2>)}\r\n        <ul className={s.list}>\r\n            {stats.map(stat =>(\r\n    <li className={s.item} key={stat.id}>\r\n      <span className={s.label}>{stat.label}</span>\r\n      <span className={s.percentage}>{stat.percentage}%</span>\r\n    </li>))}\r\n  </ul>\r\n</section>\r\n};\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport s from './FriendListItem.module.css';\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n    return (\r\n        <div className={s.friendItemWrapper}>\r\n            <span className={s.stat} style={{backgroundColor:isOnline?'green':'red'}}>{isOnline}</span>\r\n            <img className={s.avatar} src={avatar} alt={name} width=\"55\" />\r\n            <p className={s.name}>{name}</p>\r\n        </div>);\r\n           \r\n};\r\nFriendListItem.propType = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline:PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;","import PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css';\r\nimport FriendListItem from '../FriendListItem/FriendListItem';\r\n\r\nconst FriendList = ({ friends }) => {\r\n\r\n    return <ul className={s.friendList}>\r\n        {friends.map(friend => (\r\n            <li key={friend.id} className={s.FriendListItem}>\r\n                <FriendListItem avatar={friend.avatar} name={friend.name} isOnline={friend.isOnline} />\r\n            </li>\r\n            ))}     \r\n    </ul>\r\n};\r\n\r\nFriendList.propType = {\r\n    friends: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\nconst TransactionHistory = ({items}) => {\r\n    return <table className={s.transactionHistory}>\r\n  <thead >\r\n    <tr className={s.headString}>\r\n      <th className={s.column}>Type</th>\r\n      <th className={s.column}>Amount</th>\r\n      <th className={s.column}>Currency</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {items.map(item => (\r\n        <tr className={s.string} key={item.id}>\r\n          <td className={s.column}>{item.type}</td>\r\n          <td className={s.column}>{item.amount}</td>\r\n          <td className={s.column}>{item.currency}</td>\r\n    </tr>\r\n))}\r\n  </tbody>\r\n</table>\r\n};\r\n\r\nTransactionHistory.propType = {\r\n    items: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","\n// import logo from './logo.svg';\n// import './App.css';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\nimport user from './components/data/user.json';\nimport statisticalData from './components/data/statistical-data.json';\nimport friends from './components/data/friends.json';\nimport transactions from './components/data/transactions.json';\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      {/* <Statistics stats={statisticalData} /> */}\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions}/>\n    </div>\n  );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}